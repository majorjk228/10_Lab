#pragma once
#include <iostream>//библиотека для работы со стандартными потоками
#include <fstream> //библиотека для работы с файловыми потоками
#include <string>
using namespace std;

class Time
{
	int min, sec;
public:
	Time() { min = 0; sec = 0; };
	Time(int m, int s) { min = m; sec = s; }
	Time(int s) { min = 0; sec = s; } // Конструктор для секунд
	Time(const Time& t) { min = t.min; sec = t.sec; }
	~Time() {}; // Деструктор
	void clear() { sec = 0; }; // Метод почистит секунды, для дальнейшей обработки 
	int get_min() { return min; }
	int get_sec() { return sec; }
	void set_min(int m) { min = m; }
	void set_sec(int s) { sec = s; }
	//перегруженные операции
	Time& operator=(const Time&);
	Time& operator++();
	Time operator++(int);//постфиксная операция
	Time operator+(const Time&);
	Time operator-(const Time&); // Операция вычитания
	//глобальные функции ввода-вывода
	friend istream& operator>>(istream& in, Time& t);
	friend ostream& operator<<(ostream& out, const Time& t);
};